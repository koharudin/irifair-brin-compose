services:
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioBRIN # Ganti sesuai kebutuhan
      MINIO_ROOT_PASSWORD: minioBRIN # Ganti sesuai kebutuhan
    ports:
      - "9000:9000" # Port API MinIO
      - "9001:9001" # Port Konsol Admin
    volumes:
      - ./docker-dev-volumes/minio_data:/data # Volume untuk menyimpan data
      - ./docker-dev-volumes/minio_config:/root/.minio # Volume untuk menyimpan konfigurasi
    command: server /data --console-address ":9001"
  redis:
    image: redis
    ports:
      - 6379:6379
  db:
    ports:
      - 5432:5432
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    volumes:
      - ./docker-dev-volumes/pg_data:/var/lib/postgresql/data  # Persist PostgreSQL data
  old_fe : 
    build : 
      context : .
      dockerfile : Dockerfile-old_fe
    tty: true
    ports :     
      - 81:80
    volumes:
      - ./old_fe:/var/www/html
    environment:
      - ENVIRONMENT=production
  old_be :  
    tty: true
    build : 
      context : .
      dockerfile : Dockerfile-old_be
    ports :     
        - 82:80
    volumes:
      - ./old_be:/var/www/html
    environment:
      - ENVIRONMENT=development
  newapp :  
    tty: true
    build : 
      context : .
      dockerfile : Dockerfile-dev-app
    ports :     
        - 83:80
    volumes:
      - ./newapp:/var/www
      - ./newapp/public:/var/www/html
      - /var/www/storage
    environment:
      - ENVIRONMENT=development
  frontend :  
    tty: true
    build : 
      context : .
      dockerfile : Dockerfile-dev-frontend
    command: "npm run dev"
    ports :     
        - 84:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
  vristo-next-main :  
    tty: true
    build : 
      context : .
      dockerfile : Dockerfile-dev-vristo-next-main
    command: "yarn dev"
    ports :     
        - 85:3000
    volumes:
      - ./vristo-next-main:/app
      - /app/node_modules